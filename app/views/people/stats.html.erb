<% provide(:title, "Statistics") %>
<h3>Statistics</h3><br>
<div id='men-women-pie'>
    <h4>Men vs. Women</h4>
    <div class="chart">
        <script type="text/javascript">

        var r = 100,                        //radius
        w = 2 * r,                          //width
        h = 300,                            //height
        l = w / 2,                          //distance from left
        color = d3.scale.category20c();     //builtin range of colors
        data = [{"label":"men (<%=@men.length%>)", "value":<%=@men.length%>}, 
                {"label":"women (<%=@women.length%>)", "value":<%=@women.length%>}];
        
        var vis = d3.select("#men-women-pie>.chart") // Select "the element with id men-women-pie"s child who has the class of chart
            .append("svg:svg")              //create the SVG element inside of it
            .data([data])                   //associate our data with the document
                .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
                .attr("height", h)
            .append("svg:g")                //make a group to hold our pie chart
                .attr("transform", "translate(" + l + "," + r + ")")    //move the center of the pie chart from 0, 0 to l, r

        var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
            .outerRadius(r);

        var pie = d3.layout.pie()           //this will create arc data for us given a list of values
            .value(function(d) { return d.value; });    //we must tell it how to access the value of each element in our data array

        var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
            .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
            .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
                .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                    .attr("class", "slice");    //allow us to style things in the slices (like text)

            arcs.append("svg:path")
                    .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                    .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function

            arcs.append("svg:text")                                     //add a label to each slice
                    .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                    //we have to make sure to set these before calling arc.centroid
                    d.innerRadius = 0;
                    d.outerRadius = r;
                    return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
                })
                .attr("text-anchor", "middle")                          //center the text on it's origin
                .text(function(d, i) { return data[i].label; });        //get the label from our original data array
            
        </script>
    </div>
</div>
<div id='lifespan-bar'>
    <h4>Average lifespan per century</h4>
    <div class="chart">
    <style>
        .bar {
            fill: steelblue;
        }

        .bar:hover {
            fill: brown;
        }

        .axis {
            font: 10px sans-serif;
        }

        .axis path,
        .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }

        .x.axis path {
            display: none;
        }
    </style>
        <script>
        
            var margin = {top: 20, right: 20, bottom: 30, left: 40},
            width = 960 - margin.left - margin.right,
            height = 500 - margin.top - margin.bottom;

            var x = d3.scale.linear()
                .range([0, width]);

            var y = d3.scale.linear()
                .range([height, 0]);

            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom")
                .ticks(21);

            var yAxis = d3.svg.axis()
                .scale(y)
                .orient("left")
                .ticks(10);

            var svg = d3.select("#lifespan-bar>.chart").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
              .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

            data = <%= @lifespan %>;

              x.domain([0, data.length - 1]);
              y.domain([0, d3.max(data, function(d) { return d; })]);

              svg.append("g")
                  .attr("class", "x axis")
                  .attr("transform", "translate(0," + height + ")")
                  .call(xAxis)
                .append("text")
                  .attr("x", width / 2)
                  .attr("y", 20)
                  .attr("dy", ".71em")
                  .style("text-anchor", "end")
                  .text("Century");;

              svg.append("g")
                  .attr("class", "y axis")
                  .call(yAxis)
                .append("text")
                  .attr("transform", "rotate(-90)")
                  .attr("x", -(height / 2))
                  .attr("y", -35)
                  .attr("dy", ".71em")
                  .style("text-anchor", "end")
                  .text("Age");



              svg.selectAll(".bar")
                  .data(data)
                .enter().append("rect")
                  .attr("class", "bar")
                  .attr("x", function(d, i) { return x(i); })
                  .attr("width", 10)
                  .attr("y", function(d) { return y(d); })
                  .attr("height", function(d) { return height - y(d); });
        
        </script>
    </div>
</div>
<div id='word-cloud'>
    <h4>Name Frequency Word Cloud</h4>
    <div class="chart">

        <script>
          var fill = d3.scale.category20();
        
          var fontSize = d3.scale.log().range([10, 100]);
          var layout = d3.layout.cloud()
            .size([960, 600])
            .timeInterval(10)
            .text(function(d) { return d.key; })
            .font("Impact")
            .fontSize(function(d) { 
              console.log(d);
              return fontSize(+d.value); 
            })
            .rotate(function(d) { return ~~(Math.random() * 5) * 30 - 60; })
            .padding(1)
            .on("end", draw)
            .words(<%=@wordData.to_s.html_safe %>)
            .start();
        
          function draw(words) {
            d3.select("#word-cloud>.chart").append("svg")
                .attr("width", 600)
                .attr("height", 600)
              .append("g")
                .attr("transform", "translate(300,300)")
              .selectAll("text")
                .data(words)
              .enter().append("text")
                .style("font-size", function(d) { return d.size + "px"; })
                .style("font-family", "Impact")
                .style("fill", function(d, i) { return fill(i); })
                .attr("text-anchor", "middle")
                .attr("transform", function(d) {
                  return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                })
                .text(function(d) { return d.text; });
          }
        </script>
    </div>
</div>
